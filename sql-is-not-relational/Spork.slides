----
images_directory: /home/autarch/presentations/sql-is-not-relational/images
banner_bgcolor: #905030
presentation_topic: Relational & SQL
presentation_title: What is a Data Model?; The Relational Model; SQL is not Relational
presentation_place: Minneapolis, MN
presentation_date: December 14, 2005
----

{image: http://fbyg.org/janus.jpg}

=== The Janus Term

* Janus is the Roman good of doorways as well as beginnings & endings
* Thus the two faces, looking backwards and forwards
+* This has little to do with my topic
** But I'm trying to appear educated
+* "Data model" has two meanings
* First is the representation of a set of business rules for a data management system
** Tables and constraints for SQL are a "data model" of some business domain
* The other is general theory of representing and manipulating data
** I'm going to talk about this meaning

----

=== Data Models Provide ...

* *Structure*
* *Integrity*
* *Manipulation*
* A data model is like a programming language
* Provides generic tools for creating specific solutions

----

=== Structure

* How is the data organized
* In SQL you have tables and rows
* In relational you have relations and tuples
* In XML you have documents and tag markup
* Structure is /logical/, not /physical/
* How and where data is stored is *not* part of a data model

----

=== Integrity

* Rules for restricting data types, values, etc. - constraints
* Relational (and SQL) has keys (candidate & foreign) and other constraints
* XML has DTDs and XML Schema

----

=== Manipulation

* Modifying and querying the data
* SQL has SQL
* XML has XPath & XSLT for querying (more or less)
** How do you modify XML - code?

----

=== The Relational Model: Structure

* The "relation" in relational comes from mathematics
** Not "relationship"
* A relation is basically a set with N elements
** *disclaimer*: I was a music major
* A relation consists of a heading and body
* The heading defines the relation's attributes
** Attributes have a name and a data type
* The body contains 0 or more tuples
** Each tuple has the set of attributes defined by the heading

----

=== The Relational Model: Structure Example

* The most boring example ever
* Your friend, the supplier parts database!


| part_number: part_number | part_name: name | color: color |


----

=== Relations are Predicates

* Each relation represents a predicate about our business domain
* "The part with a part number of X is named Y and is some color."
+* Each tuple asserts a particular proposition based on that predicate
* "Part number 1 is named Sprocket."

----

=== The Relational Model: Integrity - Attribute and Type

* Integrity is provided through constraints
* We already saw attribute constraints
** Each attribute has a type
* Types are constraints
** Part numbers must be positive integers
** Part names must be names - strings with a length >= 2
** Colors must be one of: red, green, blue, yellow

----

=== The Relational Model: Integrity - Relation

* Also can have relation and database constraints
* Keys are relation constraints
** No two parts can have the same part number
** Part number is a candidate key for our Parts relation
* Other relation constraints
** There must be at least one red part in the relation
** There must be more blue parts than yellow parts
