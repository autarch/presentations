----
images_directory: /home/autarch/presentations/sql-is-not-relational/images
banner_bgcolor: #905030
presentation_topic: Relational & SQL
presentation_title: What is a Data Model?; The Relational Model; SQL is not Relational
presentation_place: Tokyo, Japan
presentation_date: March 30, 2006
----

=== A Data Model Is?

* "Data model" has two meanings
* First is the representation of a set of business rules
** SQL tables and constraints are a "data model" of some business domain
* The other is general theory of representing and manipulating data
** I'm going to talk about this meaning

----

=== Data Models Provide ...

* *Structure*
* *Integrity*
* *Manipulation*
* A data model is like a programming language
* Provides generic tools for creating specific solutions

----

=== Structure

* How is the data organized
* In SQL you have tables and rows
* In relational you have relations and tuples
* Structure is /logical/, not /physical/
* How and where data is stored is *not* part of a data model

----

=== Integrity

* Rules for restricting data types, values, etc. - constraints
* Relational (and SQL) has keys (candidate & foreign) and other constraints

----

=== Manipulation

* Modifying and querying the data
* SQL has SQL

----

=== The Relational Model

* Invented by Edgar Codd (RIP) in 1970.
* Based on math and logic, specifically set theory and predicate logic
* Separate logical representation of data from storage of the data

----

=== Why SQL is not relational: Bags, not Sets

* SQL is based on bags (multisets), not sets
** A bag can have duplicate tuples (rows)
** SQL does not require that a table have keys
** Results frequently contain duplicate tuples (rows)
** Bag math is much more complicated than set math
* Probably the biggest failure of SQL

----

=== Why SQL is not relational: Ordering, Namelessness, and Name Duplication

* In SQL, columns are ordered and can be referred to positionally
** Relational theory is clear that all attributes are referred to by name
* SQL allows for a query to return two columns with the same name
** |SELECT Employee.department_id, Department.department_id ...|
* SQL allows for a query to return columns without names
** |SELECT SUM(salary) FROM Employee|

----

=== Why SQL is not relational: Poor Data Type Support

* SQL implementations have poor support for custom data types
** Creating new data types based on "base types" should be trivial
** Creating new complex data types (map route, fingerprint) should be possible

----

=== Why SQL is not relational: Poor Integrity Support

* Minimal constraint support
** Making new types is hard to impossible
** Cannot express database constraints except foreign keys
** Support for table constraints is not rich enough

----

=== Why SQL is not relational: Physical/Logical Confusion

* SQL does not do a good job of separating physical and logical implementation
** Indexes are physical but unique indexes are logical (keys) /and/ physical
** Lack of options for optimizing storage separately from logical implementation
** Leads to solutions at the logical layer like denormalization

----

=== Summary

* SQL sucks and I hate it, but it's probably the best thing out there /right now/
* A truly relational DBMS would be really cool
* SQL is more complex than relational, but no more powerful
* Knowing what SQL's problems makes you aware of potential pitfalls
* When someone says "relational sucks, we should use [insert one of XML, object database, ...]"
** They are probably talking about SQL
* These slides are on the wiki

----

=== More resources

* /An Introduction to Database Systems/ - Chris Date
* /Practical Issues in Database Management/ - Fabian Pascal
* /The Third Manifesto: Foundation for Future Database Systems/ - Chris Date and Hugh Darwen
** Describes what a truly relational database should be
* /Temporal Data and the Relational Model/ - Chris Date, Hugh Darwen, and Nikos Lorentzos
** Will make your head explode
* TRDBMS projects on Sourceforge: Rel and Duro
* http://www.dbdebunk.com/
** Fabian Pascal's site, with contributions from Date and Darwen
** Pascal's tone is consistently bilious and unpalatable, /but/ the technical content is good
